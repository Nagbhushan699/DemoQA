<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="15" ignored="0" total="49" passed="34">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="368539" started-at="2022-09-13T00:18:45 IST" finished-at="2022-09-13T00:24:53 IST">
    <groups>
    </groups>
    <test name="Test1" duration-ms="22379" started-at="2022-09-13T00:18:45 IST" finished-at="2022-09-13T00:19:07 IST">
      <class name="com.demoQA.tests.Element_Page_Test">
        <test-method status="PASS" signature="beforetest()[pri:0, instance:com.demoQA.tests.Element_Page_Test@6a1aab78]" name="beforetest" is-config="true" duration-ms="20907" started-at="2022-09-13T00:18:45 IST" finished-at="2022-09-13T00:19:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.demoQA.tests.Element_Page_Test@6a1aab78]" name="before" is-config="true" duration-ms="135" started-at="2022-09-13T00:19:06 IST" finished-at="2022-09-13T00:19:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testCheckBox()[pri:0, instance:com.demoQA.tests.Element_Page_Test@6a1aab78]" name="testCheckBox" duration-ms="142" started-at="2022-09-13T00:19:06 IST" finished-at="2022-09-13T00:19:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckBox -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Element_Page_Test@6a1aab78]" name="afterMethod" is-config="true" duration-ms="2" started-at="2022-09-13T00:19:06 IST" finished-at="2022-09-13T00:19:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckBox status=SUCCESS method=Element_Page_Test.testCheckBox()[pri:0, instance:com.demoQA.tests.Element_Page_Test@6a1aab78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testRadioButtons()[pri:0, instance:com.demoQA.tests.Element_Page_Test@6a1aab78]" name="testRadioButtons" duration-ms="92" started-at="2022-09-13T00:19:06 IST" finished-at="2022-09-13T00:19:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRadioButtons -->
        <test-method status="PASS" signature="testTextBox()[pri:0, instance:com.demoQA.tests.Element_Page_Test@6a1aab78]" name="testTextBox" duration-ms="97" started-at="2022-09-13T00:19:06 IST" finished-at="2022-09-13T00:19:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextBox -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Element_Page_Test@6a1aab78]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:19:06 IST" finished-at="2022-09-13T00:19:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRadioButtons status=SUCCESS method=Element_Page_Test.testRadioButtons()[pri:0, instance:com.demoQA.tests.Element_Page_Test@6a1aab78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Element_Page_Test@6a1aab78]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:19:06 IST" finished-at="2022-09-13T00:19:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTextBox status=SUCCESS method=Element_Page_Test.testTextBox()[pri:0, instance:com.demoQA.tests.Element_Page_Test@6a1aab78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.demoQA.tests.Element_Page_Test@6a1aab78]" name="after" is-config="true" duration-ms="923" started-at="2022-09-13T00:19:06 IST" finished-at="2022-09-13T00:19:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.demoQA.tests.Element_Page_Test -->
    </test> <!-- Test1 -->
    <test name="Test2" duration-ms="14345" started-at="2022-09-13T00:19:07 IST" finished-at="2022-09-13T00:19:22 IST">
      <class name="com.demoQA.tests.TextBox_Test">
        <test-method status="PASS" signature="beforetest()[pri:0, instance:com.demoQA.tests.TextBox_Test@78ac1102]" name="beforetest" is-config="true" duration-ms="11045" started-at="2022-09-13T00:19:07 IST" finished-at="2022-09-13T00:19:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.demoQA.tests.TextBox_Test@78ac1102]" name="before" is-config="true" duration-ms="140" started-at="2022-09-13T00:19:19 IST" finished-at="2022-09-13T00:19:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="FAIL" signature="testCurrentAdd(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.demoQA.tests.TextBox_Test@78ac1102]" name="testCurrentAdd" duration-ms="1104" started-at="2022-09-13T00:19:19 IST" data-provider="dp3" finished-at="2022-09-13T00:19:20 IST">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
[public void com.demoQA.tests.TextBox_Test.testCurrentAdd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: testCurrentAdd([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) Nagbhushan Bhalerao,(java.lang.String) bhushan@123,(java.lang.String) Pune,(java.lang.String) Group 1, option 1,(java.lang.String) Ms.,(java.lang.String) Black,(java.lang.Integer) 10]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void com.demoQA.tests.TextBox_Test.testCurrentAdd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: testCurrentAdd([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) Nagbhushan Bhalerao,(java.lang.String) bhushan@123,(java.lang.String) Pune,(java.lang.String) Group 1, option 1,(java.lang.String) Ms.,(java.lang.String) Black,(java.lang.Integer) 10]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:43)
at org.testng.internal.Parameters.injectParameters(Parameters.java:925)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:34)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCurrentAdd -->
        <test-method status="FAIL" signature="testEmail(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.demoQA.tests.TextBox_Test@78ac1102]" name="testEmail" duration-ms="53" started-at="2022-09-13T00:19:20 IST" data-provider="dp2" finished-at="2022-09-13T00:19:20 IST">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
[public void com.demoQA.tests.TextBox_Test.testEmail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: testEmail([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) Nagbhushan Bhalerao,(java.lang.String) bhushan@123,(java.lang.String) Pune,(java.lang.String) Group 1, option 1,(java.lang.String) Ms.,(java.lang.String) Black,(java.lang.Integer) 10]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void com.demoQA.tests.TextBox_Test.testEmail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: testEmail([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) Nagbhushan Bhalerao,(java.lang.String) bhushan@123,(java.lang.String) Pune,(java.lang.String) Group 1, option 1,(java.lang.String) Ms.,(java.lang.String) Black,(java.lang.Integer) 10]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:43)
at org.testng.internal.Parameters.injectParameters(Parameters.java:925)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:34)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmail -->
        <test-method status="FAIL" signature="testFullName(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.demoQA.tests.TextBox_Test@78ac1102]" name="testFullName" duration-ms="48" started-at="2022-09-13T00:19:20 IST" data-provider="dp" finished-at="2022-09-13T00:19:20 IST">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
[public void com.demoQA.tests.TextBox_Test.testFullName(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: testFullName([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) Nagbhushan Bhalerao,(java.lang.String) bhushan@123,(java.lang.String) Pune,(java.lang.String) Group 1, option 1,(java.lang.String) Ms.,(java.lang.String) Black,(java.lang.Integer) 10]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void com.demoQA.tests.TextBox_Test.testFullName(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: testFullName([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) Nagbhushan Bhalerao,(java.lang.String) bhushan@123,(java.lang.String) Pune,(java.lang.String) Group 1, option 1,(java.lang.String) Ms.,(java.lang.String) Black,(java.lang.Integer) 10]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:43)
at org.testng.internal.Parameters.injectParameters(Parameters.java:925)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:34)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFullName -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.demoQA.tests.TextBox_Test@78ac1102]" name="after" is-config="true" duration-ms="1916" started-at="2022-09-13T00:19:20 IST" finished-at="2022-09-13T00:19:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.demoQA.tests.TextBox_Test -->
    </test> <!-- Test2 -->
    <test name="Test3" duration-ms="8321" started-at="2022-09-13T00:19:22 IST" finished-at="2022-09-13T00:19:30 IST">
      <class name="com.demoQA.tests.RadioButtons_Test">
        <test-method status="PASS" signature="beforetest()[pri:0, instance:com.demoQA.tests.RadioButtons_Test@782663d3]" name="beforetest" is-config="true" duration-ms="7263" started-at="2022-09-13T00:19:22 IST" finished-at="2022-09-13T00:19:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.demoQA.tests.RadioButtons_Test@782663d3]" name="before" is-config="true" duration-ms="169" started-at="2022-09-13T00:19:29 IST" finished-at="2022-09-13T00:19:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testHeaderTxt()[pri:0, instance:com.demoQA.tests.RadioButtons_Test@782663d3]" name="testHeaderTxt" duration-ms="34" started-at="2022-09-13T00:19:29 IST" finished-at="2022-09-13T00:19:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeaderTxt -->
        <test-method status="PASS" signature="testImpressiveBtn()[pri:0, instance:com.demoQA.tests.RadioButtons_Test@782663d3]" name="testImpressiveBtn" duration-ms="122" started-at="2022-09-13T00:19:29 IST" finished-at="2022-09-13T00:19:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImpressiveBtn -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.RadioButtons_Test@782663d3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:19:29 IST" finished-at="2022-09-13T00:19:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHeaderTxt status=SUCCESS method=RadioButtons_Test.testHeaderTxt()[pri:0, instance:com.demoQA.tests.RadioButtons_Test@782663d3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.RadioButtons_Test@782663d3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:19:30 IST" finished-at="2022-09-13T00:19:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testImpressiveBtn status=SUCCESS method=RadioButtons_Test.testImpressiveBtn()[pri:0, instance:com.demoQA.tests.RadioButtons_Test@782663d3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testYesBtn()[pri:0, instance:com.demoQA.tests.RadioButtons_Test@782663d3]" name="testYesBtn" duration-ms="98" started-at="2022-09-13T00:19:30 IST" finished-at="2022-09-13T00:19:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testYesBtn -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.demoQA.tests.RadioButtons_Test@782663d3]" name="after" is-config="true" duration-ms="627" started-at="2022-09-13T00:19:30 IST" finished-at="2022-09-13T00:19:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.RadioButtons_Test@782663d3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:19:30 IST" finished-at="2022-09-13T00:19:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testYesBtn status=SUCCESS method=RadioButtons_Test.testYesBtn()[pri:0, instance:com.demoQA.tests.RadioButtons_Test@782663d3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.demoQA.tests.RadioButtons_Test -->
    </test> <!-- Test3 -->
    <test name="Test4" duration-ms="25977" started-at="2022-09-13T00:19:30 IST" finished-at="2022-09-13T00:19:56 IST">
      <class name="com.demoQA.tests.Test_Interactions">
        <test-method status="PASS" signature="beforetest()[pri:0, instance:com.demoQA.tests.Test_Interactions@150c158]" name="beforetest" is-config="true" duration-ms="12938" started-at="2022-09-13T00:19:30 IST" finished-at="2022-09-13T00:19:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="beforeclass()[pri:0, instance:com.demoQA.tests.Test_Interactions@150c158]" name="beforeclass" is-config="true" duration-ms="91" started-at="2022-09-13T00:19:43 IST" finished-at="2022-09-13T00:19:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method status="PASS" signature="verifyDroppableTitle()[pri:0, instance:com.demoQA.tests.Test_Interactions@150c158]" name="verifyDroppableTitle" duration-ms="210" started-at="2022-09-13T00:19:43 IST" finished-at="2022-09-13T00:19:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDroppableTitle -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Test_Interactions@150c158]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:19:44 IST" finished-at="2022-09-13T00:19:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDroppableTitle status=SUCCESS method=Test_Interactions.verifyDroppableTitle()[pri:0, instance:com.demoQA.tests.Test_Interactions@150c158] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="verifyTitle()[pri:0, instance:com.demoQA.tests.Test_Interactions@150c158]" name="verifyTitle" duration-ms="10569" started-at="2022-09-13T00:19:44 IST" finished-at="2022-09-13T00:19:54 IST">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='pattern-backgound playgound-header']//div[text()='Interactions']"}
  (Session info: chrome=105.0.5195.102)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-7DB4GVKK', ip: '192.168.7.201', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_321'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.102, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\bhalerao\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:57373}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 1b383ebc3a292b98324211dec0e8630c
*** Element info: {Using=xpath, value=//div[@class='pattern-backgound playgound-header']//div[text()='Interactions']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='pattern-backgound playgound-header']//div[text()='Interactions']"}
  (Session info: chrome=105.0.5195.102)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-7DB4GVKK', ip: '192.168.7.201', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_321'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.102, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\bhalerao\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:57373}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 1b383ebc3a292b98324211dec0e8630c
*** Element info: {Using=xpath, value=//div[@class='pattern-backgound playgound-header']//div[text()='Interactions']}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.demoQA.page.Interactions.checkTitle(Interactions.java:31)
at com.demoQA.tests.Test_Interactions.verifyTitle(Test_Interactions.java:23)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitle -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Test_Interactions@150c158]" name="afterMethod" is-config="true" duration-ms="1330" started-at="2022-09-13T00:19:54 IST" finished-at="2022-09-13T00:19:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTitle status=FAILURE method=Test_Interactions.verifyTitle()[pri:0, instance:com.demoQA.tests.Test_Interactions@150c158] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.demoQA.tests.Test_Interactions@150c158]" name="after" is-config="true" duration-ms="817" started-at="2022-09-13T00:19:56 IST" finished-at="2022-09-13T00:19:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.demoQA.tests.Test_Interactions -->
    </test> <!-- Test4 -->
    <test name="Test5" duration-ms="14471" started-at="2022-09-13T00:19:56 IST" finished-at="2022-09-13T00:20:11 IST">
      <class name="com.demoQA.tests.Widgets_Test">
        <test-method status="PASS" signature="beforetest()[pri:0, instance:com.demoQA.tests.Widgets_Test@2eda0940]" name="beforetest" is-config="true" duration-ms="13496" started-at="2022-09-13T00:19:56 IST" finished-at="2022-09-13T00:20:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="beforeclass()[pri:0, instance:com.demoQA.tests.Widgets_Test@2eda0940]" name="beforeclass" is-config="true" duration-ms="108" started-at="2022-09-13T00:20:10 IST" finished-at="2022-09-13T00:20:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method status="PASS" signature="getTitle()[pri:0, instance:com.demoQA.tests.Widgets_Test@2eda0940]" name="getTitle" duration-ms="33" started-at="2022-09-13T00:20:10 IST" finished-at="2022-09-13T00:20:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTitle -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Widgets_Test@2eda0940]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:20:10 IST" finished-at="2022-09-13T00:20:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTitle status=SUCCESS method=Widgets_Test.getTitle()[pri:0, instance:com.demoQA.tests.Widgets_Test@2eda0940] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="getTitleOFDatepicker()[pri:0, instance:com.demoQA.tests.Widgets_Test@2eda0940]" name="getTitleOFDatepicker" duration-ms="100" started-at="2022-09-13T00:20:10 IST" finished-at="2022-09-13T00:20:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTitleOFDatepicker -->
        <test-method status="PASS" signature="getTitleOFProgressBar()[pri:0, instance:com.demoQA.tests.Widgets_Test@2eda0940]" name="getTitleOFProgressBar" duration-ms="88" started-at="2022-09-13T00:20:10 IST" finished-at="2022-09-13T00:20:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTitleOFProgressBar -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Widgets_Test@2eda0940]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:20:10 IST" finished-at="2022-09-13T00:20:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTitleOFDatepicker status=SUCCESS method=Widgets_Test.getTitleOFDatepicker()[pri:0, instance:com.demoQA.tests.Widgets_Test@2eda0940] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.demoQA.tests.Widgets_Test@2eda0940]" name="after" is-config="true" duration-ms="637" started-at="2022-09-13T00:20:10 IST" finished-at="2022-09-13T00:20:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Widgets_Test@2eda0940]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:20:10 IST" finished-at="2022-09-13T00:20:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTitleOFProgressBar status=SUCCESS method=Widgets_Test.getTitleOFProgressBar()[pri:0, instance:com.demoQA.tests.Widgets_Test@2eda0940] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.demoQA.tests.Widgets_Test -->
    </test> <!-- Test5 -->
    <test name="Test6" duration-ms="115451" started-at="2022-09-13T00:20:11 IST" finished-at="2022-09-13T00:22:06 IST">
      <class name="com.demoQA.tests.Alert_Test">
        <test-method status="PASS" signature="beforetest()[pri:0, instance:com.demoQA.tests.Alert_Test@4d1b0d2a]" name="beforetest" is-config="true" duration-ms="12777" started-at="2022-09-13T00:20:11 IST" finished-at="2022-09-13T00:20:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.demoQA.tests.Alert_Test@4d1b0d2a]" name="beforeClass" is-config="true" duration-ms="342" started-at="2022-09-13T00:20:24 IST" finished-at="2022-09-13T00:20:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testAlert()[pri:0, instance:com.demoQA.tests.Alert_Test@4d1b0d2a]" name="testAlert" duration-ms="367" started-at="2022-09-13T00:20:24 IST" finished-at="2022-09-13T00:20:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlert -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Alert_Test@4d1b0d2a]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:20:25 IST" finished-at="2022-09-13T00:20:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAlert status=SUCCESS method=Alert_Test.testAlert()[pri:0, instance:com.demoQA.tests.Alert_Test@4d1b0d2a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="testConfirmAlert()[pri:0, instance:com.demoQA.tests.Alert_Test@4d1b0d2a]" name="testConfirmAlert" duration-ms="100886" started-at="2022-09-13T00:20:25 IST" finished-at="2022-09-13T00:22:05 IST">
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=105.0.5195.102)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-7DB4GVKK', ip: '192.168.7.201', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_321'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.102, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\bhalerao\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:57523}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: f96291f519340066d7b5962f73bea8fe
*** Element info: {Using=xpath, value=//span[@id='confirmResult']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=105.0.5195.102)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-7DB4GVKK', ip: '192.168.7.201', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_321'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.102, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\bhalerao\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:57523}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: f96291f519340066d7b5962f73bea8fe
*** Element info: {Using=xpath, value=//span[@id='confirmResult']}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.demoQA.page.Alerts.clickConfirmAlert(Alerts.java:45)
at com.demoQA.tests.Alert_Test.testConfirmAlert(Alert_Test.java:43)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConfirmAlert -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Alert_Test@4d1b0d2a]" name="afterMethod" is-config="true" duration-ms="100" started-at="2022-09-13T00:22:05 IST" finished-at="2022-09-13T00:22:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testConfirmAlert status=FAILURE method=Alert_Test.testConfirmAlert()[pri:0, instance:com.demoQA.tests.Alert_Test@4d1b0d2a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="testPromptAlert()[pri:0, instance:com.demoQA.tests.Alert_Test@4d1b0d2a]" name="testPromptAlert" duration-ms="14" started-at="2022-09-13T00:22:06 IST" finished-at="2022-09-13T00:22:06 IST">
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=105.0.5195.102)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-7DB4GVKK', ip: '192.168.7.201', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_321'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.102, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\bhalerao\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:57523}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: f96291f519340066d7b5962f73bea8fe
*** Element info: {Using=xpath, value=//button[@id='promtButton']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=105.0.5195.102)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-7DB4GVKK', ip: '192.168.7.201', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_321'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.102, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\bhalerao\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:57523}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: f96291f519340066d7b5962f73bea8fe
*** Element info: {Using=xpath, value=//button[@id='promtButton']}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.demoQA.page.Alerts.clickPromptAlert(Alerts.java:49)
at com.demoQA.tests.Alert_Test.testPromptAlert(Alert_Test.java:51)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPromptAlert -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Alert_Test@4d1b0d2a]" name="afterMethod" is-config="true" duration-ms="5" started-at="2022-09-13T00:22:06 IST" finished-at="2022-09-13T00:22:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPromptAlert status=FAILURE method=Alert_Test.testPromptAlert()[pri:0, instance:com.demoQA.tests.Alert_Test@4d1b0d2a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="testTimerAlert()[pri:0, instance:com.demoQA.tests.Alert_Test@4d1b0d2a]" name="testTimerAlert" duration-ms="18" started-at="2022-09-13T00:22:06 IST" finished-at="2022-09-13T00:22:06 IST">
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=105.0.5195.102)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-7DB4GVKK', ip: '192.168.7.201', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_321'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.102, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\bhalerao\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:57523}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: f96291f519340066d7b5962f73bea8fe
*** Element info: {Using=xpath, value=//button[@id='timerAlertButton']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=105.0.5195.102)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-7DB4GVKK', ip: '192.168.7.201', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_321'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.102, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\bhalerao\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:57523}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: f96291f519340066d7b5962f73bea8fe
*** Element info: {Using=xpath, value=//button[@id='timerAlertButton']}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.demoQA.page.Alerts.clicktimerAlert(Alerts.java:35)
at com.demoQA.tests.Alert_Test.testTimerAlert(Alert_Test.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTimerAlert -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Alert_Test@4d1b0d2a]" name="afterMethod" is-config="true" duration-ms="2" started-at="2022-09-13T00:22:06 IST" finished-at="2022-09-13T00:22:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTimerAlert status=FAILURE method=Alert_Test.testTimerAlert()[pri:0, instance:com.demoQA.tests.Alert_Test@4d1b0d2a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="testTitle()[pri:0, instance:com.demoQA.tests.Alert_Test@4d1b0d2a]" name="testTitle" duration-ms="9" started-at="2022-09-13T00:22:06 IST" finished-at="2022-09-13T00:22:06 IST">
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=105.0.5195.102)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-7DB4GVKK', ip: '192.168.7.201', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_321'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.102, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\bhalerao\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:57523}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: f96291f519340066d7b5962f73bea8fe
*** Element info: {Using=xpath, value=//div[text()='Alerts']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=105.0.5195.102)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-7DB4GVKK', ip: '192.168.7.201', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_321'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.102, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\bhalerao\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:57523}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: f96291f519340066d7b5962f73bea8fe
*** Element info: {Using=xpath, value=//div[text()='Alerts']}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.demoQA.page.Alerts.getTitle(Alerts.java:25)
at com.demoQA.tests.Alert_Test.testTitle(Alert_Test.java:29)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTitle -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Alert_Test@4d1b0d2a]" name="afterMethod" is-config="true" duration-ms="3" started-at="2022-09-13T00:22:06 IST" finished-at="2022-09-13T00:22:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTitle status=FAILURE method=Alert_Test.testTitle()[pri:0, instance:com.demoQA.tests.Alert_Test@4d1b0d2a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.demoQA.tests.Alert_Test@4d1b0d2a]" name="after" is-config="true" duration-ms="902" started-at="2022-09-13T00:22:06 IST" finished-at="2022-09-13T00:22:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.demoQA.tests.Alert_Test -->
    </test> <!-- Test6 -->
    <test name="Test7" duration-ms="12911" started-at="2022-09-13T00:22:07 IST" finished-at="2022-09-13T00:22:20 IST">
      <class name="com.demoQA.tests.Frame_Test">
        <test-method status="PASS" signature="beforetest()[pri:0, instance:com.demoQA.tests.Frame_Test@545997b1]" name="beforetest" is-config="true" duration-ms="11816" started-at="2022-09-13T00:22:07 IST" finished-at="2022-09-13T00:22:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.demoQA.tests.Frame_Test@545997b1]" name="beforeClass" is-config="true" duration-ms="215" started-at="2022-09-13T00:22:18 IST" finished-at="2022-09-13T00:22:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="verifyTitle()[pri:0, instance:com.demoQA.tests.Frame_Test@545997b1]" name="verifyTitle" duration-ms="34" started-at="2022-09-13T00:22:19 IST" finished-at="2022-09-13T00:22:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitle -->
        <test-method status="PASS" signature="testFrame()[pri:1, instance:com.demoQA.tests.Frame_Test@545997b1]" name="testFrame" duration-ms="221" started-at="2022-09-13T00:22:19 IST" finished-at="2022-09-13T00:22:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFrame -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Frame_Test@545997b1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:22:19 IST" finished-at="2022-09-13T00:22:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTitle status=SUCCESS method=Frame_Test.verifyTitle()[pri:0, instance:com.demoQA.tests.Frame_Test@545997b1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.demoQA.tests.Frame_Test@545997b1]" name="after" is-config="true" duration-ms="622" started-at="2022-09-13T00:22:19 IST" finished-at="2022-09-13T00:22:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Frame_Test@545997b1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:22:19 IST" finished-at="2022-09-13T00:22:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFrame status=SUCCESS method=Frame_Test.testFrame()[pri:1, instance:com.demoQA.tests.Frame_Test@545997b1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.demoQA.tests.Frame_Test -->
    </test> <!-- Test7 -->
    <test name="Test8" duration-ms="7684" started-at="2022-09-13T00:22:20 IST" finished-at="2022-09-13T00:22:27 IST">
      <class name="com.demoQA.tests.HomePage_Test">
        <test-method status="PASS" signature="beforetest()[pri:0, instance:com.demoQA.tests.HomePage_Test@df27fae]" name="beforetest" is-config="true" duration-ms="6927" started-at="2022-09-13T00:22:20 IST" finished-at="2022-09-13T00:22:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="testElement()[pri:0, instance:com.demoQA.tests.HomePage_Test@df27fae]" name="testElement" duration-ms="128" started-at="2022-09-13T00:22:27 IST" finished-at="2022-09-13T00:22:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testElement -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.HomePage_Test@df27fae]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:22:27 IST" finished-at="2022-09-13T00:22:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testElement status=SUCCESS method=HomePage_Test.testElement()[pri:0, instance:com.demoQA.tests.HomePage_Test@df27fae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.demoQA.tests.HomePage_Test@df27fae]" name="after" is-config="true" duration-ms="628" started-at="2022-09-13T00:22:27 IST" finished-at="2022-09-13T00:22:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.demoQA.tests.HomePage_Test -->
    </test> <!-- Test8 -->
    <test name="Test9" duration-ms="9381" started-at="2022-09-13T00:22:27 IST" finished-at="2022-09-13T00:22:37 IST">
      <class name="com.demoQA.tests.ToolTip_Test">
        <test-method status="PASS" signature="beforetest()[pri:0, instance:com.demoQA.tests.ToolTip_Test@5579bb86]" name="beforetest" is-config="true" duration-ms="7637" started-at="2022-09-13T00:22:27 IST" finished-at="2022-09-13T00:22:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="beforeclass()[pri:0, instance:com.demoQA.tests.ToolTip_Test@5579bb86]" name="beforeclass" is-config="true" duration-ms="171" started-at="2022-09-13T00:22:35 IST" finished-at="2022-09-13T00:22:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method status="PASS" signature="verifyEnterText()[pri:0, instance:com.demoQA.tests.ToolTip_Test@5579bb86]" name="verifyEnterText" duration-ms="173" started-at="2022-09-13T00:22:35 IST" finished-at="2022-09-13T00:22:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEnterText -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.ToolTip_Test@5579bb86]" name="afterMethod" is-config="true" duration-ms="1" started-at="2022-09-13T00:22:35 IST" finished-at="2022-09-13T00:22:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEnterText status=SUCCESS method=ToolTip_Test.verifyEnterText()[pri:0, instance:com.demoQA.tests.ToolTip_Test@5579bb86] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyHoverFieldText()[pri:0, instance:com.demoQA.tests.ToolTip_Test@5579bb86]" name="verifyHoverFieldText" duration-ms="391" started-at="2022-09-13T00:22:35 IST" finished-at="2022-09-13T00:22:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHoverFieldText -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.ToolTip_Test@5579bb86]" name="afterMethod" is-config="true" duration-ms="1" started-at="2022-09-13T00:22:36 IST" finished-at="2022-09-13T00:22:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyHoverFieldText status=SUCCESS method=ToolTip_Test.verifyHoverFieldText()[pri:0, instance:com.demoQA.tests.ToolTip_Test@5579bb86] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyHoverText()[pri:0, instance:com.demoQA.tests.ToolTip_Test@5579bb86]" name="verifyHoverText" duration-ms="329" started-at="2022-09-13T00:22:36 IST" finished-at="2022-09-13T00:22:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHoverText -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.ToolTip_Test@5579bb86]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:22:36 IST" finished-at="2022-09-13T00:22:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyHoverText status=SUCCESS method=ToolTip_Test.verifyHoverText()[pri:0, instance:com.demoQA.tests.ToolTip_Test@5579bb86] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyTitle()[pri:0, instance:com.demoQA.tests.ToolTip_Test@5579bb86]" name="verifyTitle" duration-ms="29" started-at="2022-09-13T00:22:36 IST" finished-at="2022-09-13T00:22:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitle -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.ToolTip_Test@5579bb86]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:22:36 IST" finished-at="2022-09-13T00:22:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTitle status=SUCCESS method=ToolTip_Test.verifyTitle()[pri:0, instance:com.demoQA.tests.ToolTip_Test@5579bb86] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.demoQA.tests.ToolTip_Test@5579bb86]" name="after" is-config="true" duration-ms="642" started-at="2022-09-13T00:22:36 IST" finished-at="2022-09-13T00:22:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.demoQA.tests.ToolTip_Test -->
    </test> <!-- Test9 -->
    <test name="Test10" duration-ms="9939" started-at="2022-09-13T00:22:37 IST" finished-at="2022-09-13T00:22:47 IST">
      <class name="com.demoQA.tests.NestedFrames_Test">
        <test-method status="PASS" signature="beforetest()[pri:0, instance:com.demoQA.tests.NestedFrames_Test@b3d7190]" name="beforetest" is-config="true" duration-ms="8708" started-at="2022-09-13T00:22:37 IST" finished-at="2022-09-13T00:22:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.demoQA.tests.NestedFrames_Test@b3d7190]" name="beforeClass" is-config="true" duration-ms="248" started-at="2022-09-13T00:22:46 IST" finished-at="2022-09-13T00:22:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="verifyTitle()[pri:0, instance:com.demoQA.tests.NestedFrames_Test@b3d7190]" name="verifyTitle" duration-ms="29" started-at="2022-09-13T00:22:46 IST" finished-at="2022-09-13T00:22:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitle -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.NestedFrames_Test@b3d7190]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:22:46 IST" finished-at="2022-09-13T00:22:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTitle status=SUCCESS method=NestedFrames_Test.verifyTitle()[pri:0, instance:com.demoQA.tests.NestedFrames_Test@b3d7190] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyNestedFrame()[pri:1, instance:com.demoQA.tests.NestedFrames_Test@b3d7190]" name="verifyNestedFrame" duration-ms="347" started-at="2022-09-13T00:22:46 IST" finished-at="2022-09-13T00:22:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNestedFrame -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.demoQA.tests.NestedFrames_Test@b3d7190]" name="after" is-config="true" duration-ms="603" started-at="2022-09-13T00:22:46 IST" finished-at="2022-09-13T00:22:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.NestedFrames_Test@b3d7190]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:22:46 IST" finished-at="2022-09-13T00:22:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNestedFrame status=SUCCESS method=NestedFrames_Test.verifyNestedFrame()[pri:1, instance:com.demoQA.tests.NestedFrames_Test@b3d7190] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.demoQA.tests.NestedFrames_Test -->
    </test> <!-- Test10 -->
    <test name="Test11" duration-ms="15503" started-at="2022-09-13T00:22:47 IST" finished-at="2022-09-13T00:23:02 IST">
      <class name="com.demoQA.tests.Alert_Frame_Window_Page_Test">
        <test-method status="PASS" signature="beforetest()[pri:0, instance:com.demoQA.tests.Alert_Frame_Window_Page_Test@3b94d659]" name="beforetest" is-config="true" duration-ms="14208" started-at="2022-09-13T00:22:47 IST" finished-at="2022-09-13T00:23:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="beforeclass()[pri:0, instance:com.demoQA.tests.Alert_Frame_Window_Page_Test@3b94d659]" name="beforeclass" is-config="true" duration-ms="88" started-at="2022-09-13T00:23:01 IST" finished-at="2022-09-13T00:23:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method status="PASS" signature="testAlertTitle()[pri:0, instance:com.demoQA.tests.Alert_Frame_Window_Page_Test@3b94d659]" name="testAlertTitle" duration-ms="99" started-at="2022-09-13T00:23:01 IST" finished-at="2022-09-13T00:23:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlertTitle -->
        <test-method status="PASS" signature="testFrameTitle()[pri:0, instance:com.demoQA.tests.Alert_Frame_Window_Page_Test@3b94d659]" name="testFrameTitle" duration-ms="91" started-at="2022-09-13T00:23:01 IST" finished-at="2022-09-13T00:23:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFrameTitle -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Alert_Frame_Window_Page_Test@3b94d659]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:23:01 IST" finished-at="2022-09-13T00:23:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAlertTitle status=SUCCESS method=Alert_Frame_Window_Page_Test.testAlertTitle()[pri:0, instance:com.demoQA.tests.Alert_Frame_Window_Page_Test@3b94d659] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testNestedIFrameTitle()[pri:0, instance:com.demoQA.tests.Alert_Frame_Window_Page_Test@3b94d659]" name="testNestedIFrameTitle" duration-ms="89" started-at="2022-09-13T00:23:01 IST" finished-at="2022-09-13T00:23:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNestedIFrameTitle -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Alert_Frame_Window_Page_Test@3b94d659]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:23:01 IST" finished-at="2022-09-13T00:23:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFrameTitle status=SUCCESS method=Alert_Frame_Window_Page_Test.testFrameTitle()[pri:0, instance:com.demoQA.tests.Alert_Frame_Window_Page_Test@3b94d659] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.demoQA.tests.Alert_Frame_Window_Page_Test@3b94d659]" name="after" is-config="true" duration-ms="924" started-at="2022-09-13T00:23:02 IST" finished-at="2022-09-13T00:23:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Alert_Frame_Window_Page_Test@3b94d659]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:23:02 IST" finished-at="2022-09-13T00:23:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testNestedIFrameTitle status=SUCCESS method=Alert_Frame_Window_Page_Test.testNestedIFrameTitle()[pri:0, instance:com.demoQA.tests.Alert_Frame_Window_Page_Test@3b94d659] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.demoQA.tests.Alert_Frame_Window_Page_Test -->
    </test> <!-- Test11 -->
    <test name="Test12" duration-ms="52938" started-at="2022-09-13T00:23:03 IST" finished-at="2022-09-13T00:23:56 IST">
      <class name="com.demoQA.tests.Browsers_Windows_Test">
        <test-method status="PASS" signature="beforetest()[pri:0, instance:com.demoQA.tests.Browsers_Windows_Test@4516af24]" name="beforetest" is-config="true" duration-ms="17292" started-at="2022-09-13T00:23:03 IST" finished-at="2022-09-13T00:23:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.demoQA.tests.Browsers_Windows_Test@4516af24]" name="beforeClass" is-config="true" duration-ms="291" started-at="2022-09-13T00:23:20 IST" finished-at="2022-09-13T00:23:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="verifyTitle()[pri:0, instance:com.demoQA.tests.Browsers_Windows_Test@4516af24]" name="verifyTitle" duration-ms="30" started-at="2022-09-13T00:23:20 IST" finished-at="2022-09-13T00:23:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitle -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Browsers_Windows_Test@4516af24]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:23:20 IST" finished-at="2022-09-13T00:23:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTitle status=SUCCESS method=Browsers_Windows_Test.verifyTitle()[pri:0, instance:com.demoQA.tests.Browsers_Windows_Test@4516af24] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="verifyNewTab()[pri:1, instance:com.demoQA.tests.Browsers_Windows_Test@4516af24]" name="verifyNewTab" duration-ms="180" started-at="2022-09-13T00:23:20 IST" finished-at="2022-09-13T00:23:20 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [This is a sample page] but found [ ]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [This is a sample page] but found [ ]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.demoQA.tests.Browsers_Windows_Test.verifyNewTab(Browsers_Windows_Test.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNewTab -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Browsers_Windows_Test@4516af24]" name="afterMethod" is-config="true" duration-ms="507" started-at="2022-09-13T00:23:20 IST" finished-at="2022-09-13T00:23:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNewTab status=FAILURE method=Browsers_Windows_Test.verifyNewTab()[pri:1, instance:com.demoQA.tests.Browsers_Windows_Test@4516af24] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="verifyNewWindow()[pri:2, instance:com.demoQA.tests.Browsers_Windows_Test@4516af24]" name="verifyNewWindow" duration-ms="33133" started-at="2022-09-13T00:23:21 IST" finished-at="2022-09-13T00:23:54 IST">
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=105.0.5195.102)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-7DB4GVKK', ip: '192.168.7.201', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_321'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.102, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\bhalerao\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:57927}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: e1c921dea3e2d0373ad1439041232612
*** Element info: {Using=xpath, value=//body[contains(text(),'Knowledge increases by sharing but not by saving')] }]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=105.0.5195.102)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-7DB4GVKK', ip: '192.168.7.201', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_321'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.102, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\bhalerao\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:57927}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: e1c921dea3e2d0373ad1439041232612
*** Element info: {Using=xpath, value=//body[contains(text(),'Knowledge increases by sharing but not by saving')] }
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.demoQA.page.Browser_Windows.switchToNewWindows(Browser_Windows.java:56)
at com.demoQA.tests.Browsers_Windows_Test.verifyNewWindow(Browsers_Windows_Test.java:40)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNewWindow -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Browsers_Windows_Test@4516af24]" name="afterMethod" is-config="true" duration-ms="4" started-at="2022-09-13T00:23:54 IST" finished-at="2022-09-13T00:23:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNewWindow status=FAILURE method=Browsers_Windows_Test.verifyNewWindow()[pri:2, instance:com.demoQA.tests.Browsers_Windows_Test@4516af24] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.demoQA.tests.Browsers_Windows_Test@4516af24]" name="after" is-config="true" duration-ms="1492" started-at="2022-09-13T00:23:54 IST" finished-at="2022-09-13T00:23:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.demoQA.tests.Browsers_Windows_Test -->
    </test> <!-- Test12 -->
    <test name="Test13" duration-ms="14396" started-at="2022-09-13T00:23:56 IST" finished-at="2022-09-13T00:24:10 IST">
      <class name="com.demoQA.tests.CheckBox_Test">
        <test-method status="PASS" signature="beforetest()[pri:0, instance:com.demoQA.tests.CheckBox_Test@71623278]" name="beforetest" is-config="true" duration-ms="7939" started-at="2022-09-13T00:23:56 IST" finished-at="2022-09-13T00:24:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="before()[pri:0, instance:com.demoQA.tests.CheckBox_Test@71623278]" name="before" is-config="true" duration-ms="202" started-at="2022-09-13T00:24:04 IST" finished-at="2022-09-13T00:24:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testHeaderTxt()[pri:0, instance:com.demoQA.tests.CheckBox_Test@71623278]" name="testHeaderTxt" duration-ms="33" started-at="2022-09-13T00:24:04 IST" finished-at="2022-09-13T00:24:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeaderTxt -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.CheckBox_Test@71623278]" name="afterMethod" is-config="true" duration-ms="1" started-at="2022-09-13T00:24:04 IST" finished-at="2022-09-13T00:24:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHeaderTxt status=SUCCESS method=CheckBox_Test.testHeaderTxt()[pri:0, instance:com.demoQA.tests.CheckBox_Test@71623278] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="testHomeCheckBox()[pri:0, instance:com.demoQA.tests.CheckBox_Test@71623278]" name="testHomeCheckBox" duration-ms="5145" started-at="2022-09-13T00:24:04 IST" finished-at="2022-09-13T00:24:09 IST">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
at org.testng.AssertJUnit.fail(AssertJUnit.java:47)
at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:20)
at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:26)
at com.demoQA.tests.CheckBox_Test.testHomeCheckBox(CheckBox_Test.java:45)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHomeCheckBox -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.CheckBox_Test@71623278]" name="afterMethod" is-config="true" duration-ms="391" started-at="2022-09-13T00:24:09 IST" finished-at="2022-09-13T00:24:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHomeCheckBox status=FAILURE method=CheckBox_Test.testHomeCheckBox()[pri:0, instance:com.demoQA.tests.CheckBox_Test@71623278] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testHomeTxt()[pri:0, instance:com.demoQA.tests.CheckBox_Test@71623278]" name="testHomeTxt" duration-ms="33" started-at="2022-09-13T00:24:09 IST" finished-at="2022-09-13T00:24:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHomeTxt -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.demoQA.tests.CheckBox_Test@71623278]" name="after" is-config="true" duration-ms="649" started-at="2022-09-13T00:24:09 IST" finished-at="2022-09-13T00:24:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.CheckBox_Test@71623278]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:24:09 IST" finished-at="2022-09-13T00:24:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHomeTxt status=SUCCESS method=CheckBox_Test.testHomeTxt()[pri:0, instance:com.demoQA.tests.CheckBox_Test@71623278] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.demoQA.tests.CheckBox_Test -->
    </test> <!-- Test13 -->
    <test name="Test14" duration-ms="14057" started-at="2022-09-13T00:24:10 IST" finished-at="2022-09-13T00:24:24 IST">
      <class name="com.demoQA.tests.Datepicker_Test">
        <test-method status="PASS" signature="beforetest()[pri:0, instance:com.demoQA.tests.Datepicker_Test@2f8f5f62]" name="beforetest" is-config="true" duration-ms="7858" started-at="2022-09-13T00:24:10 IST" finished-at="2022-09-13T00:24:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="beforeclass()[pri:0, instance:com.demoQA.tests.Datepicker_Test@2f8f5f62]" name="beforeclass" is-config="true" duration-ms="171" started-at="2022-09-13T00:24:18 IST" finished-at="2022-09-13T00:24:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method status="FAIL" signature="verifyDate()[pri:0, instance:com.demoQA.tests.Datepicker_Test@2f8f5f62]" name="verifyDate" duration-ms="31" started-at="2022-09-13T00:24:18 IST" data-provider="data" finished-at="2022-09-13T00:24:18 IST">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
[public void com.demoQA.tests.Datepicker_Test.verifyDate() throws java.lang.InterruptedException] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: verifyDate([])
Arguments: [(java.lang.Integer) 2013,(java.lang.String) August,(java.lang.Integer) 13]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void com.demoQA.tests.Datepicker_Test.verifyDate() throws java.lang.InterruptedException] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: verifyDate([])
Arguments: [(java.lang.Integer) 2013,(java.lang.String) August,(java.lang.Integer) 13]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:43)
at org.testng.internal.Parameters.injectParameters(Parameters.java:925)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:34)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDate -->
        <test-method status="PASS" signature="verifyDateAndTime()[pri:0, instance:com.demoQA.tests.Datepicker_Test@2f8f5f62]" name="verifyDateAndTime" duration-ms="1846" started-at="2022-09-13T00:24:18 IST" finished-at="2022-09-13T00:24:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDateAndTime -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Datepicker_Test@2f8f5f62]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:24:20 IST" finished-at="2022-09-13T00:24:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateAndTime status=SUCCESS method=Datepicker_Test.verifyDateAndTime()[pri:0, instance:com.demoQA.tests.Datepicker_Test@2f8f5f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="verifyDateByPrevNextBtn(int, int, int)[pri:0, instance:com.demoQA.tests.Datepicker_Test@2f8f5f62]" name="verifyDateByPrevNextBtn" duration-ms="1135" started-at="2022-09-13T00:24:20 IST" data-provider="dp2" finished-at="2022-09-13T00:24:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[2020]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [08/15/2015] but found [08/12/2020]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [08/15/2015] but found [08/12/2020]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.demoQA.tests.Datepicker_Test.verifyDateByPrevNextBtn(Datepicker_Test.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDateByPrevNextBtn -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Datepicker_Test@2f8f5f62]" name="afterMethod" is-config="true" duration-ms="205" started-at="2022-09-13T00:24:21 IST" finished-at="2022-09-13T00:24:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateByPrevNextBtn status=FAILURE method=Datepicker_Test.verifyDateByPrevNextBtn(int, int, int)[pri:0, instance:com.demoQA.tests.Datepicker_Test@2f8f5f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="verifyDateByPrevNextBtn(int, int, int)[pri:0, instance:com.demoQA.tests.Datepicker_Test@2f8f5f62]" name="verifyDateByPrevNextBtn" duration-ms="1083" started-at="2022-09-13T00:24:21 IST" data-provider="dp2" finished-at="2022-09-13T00:24:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[2022]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [08/15/2015] but found [09/13/2022]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [08/15/2015] but found [09/13/2022]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.demoQA.tests.Datepicker_Test.verifyDateByPrevNextBtn(Datepicker_Test.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDateByPrevNextBtn -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Datepicker_Test@2f8f5f62]" name="afterMethod" is-config="true" duration-ms="167" started-at="2022-09-13T00:24:22 IST" finished-at="2022-09-13T00:24:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateByPrevNextBtn status=FAILURE method=Datepicker_Test.verifyDateByPrevNextBtn(int, int, int)[pri:0, instance:com.demoQA.tests.Datepicker_Test@2f8f5f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="verifyDateByPrevNextBtn(int, int, int)[pri:0, instance:com.demoQA.tests.Datepicker_Test@2f8f5f62]" name="verifyDateByPrevNextBtn" duration-ms="654" started-at="2022-09-13T00:24:23 IST" data-provider="dp2" finished-at="2022-09-13T00:24:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[2023]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [08/15/2015] but found [10/14/2023]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [08/15/2015] but found [10/14/2023]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.demoQA.tests.Datepicker_Test.verifyDateByPrevNextBtn(Datepicker_Test.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDateByPrevNextBtn -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Datepicker_Test@2f8f5f62]" name="afterMethod" is-config="true" duration-ms="183" started-at="2022-09-13T00:24:23 IST" finished-at="2022-09-13T00:24:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateByPrevNextBtn status=FAILURE method=Datepicker_Test.verifyDateByPrevNextBtn(int, int, int)[pri:0, instance:com.demoQA.tests.Datepicker_Test@2f8f5f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyTitle()[pri:0, instance:com.demoQA.tests.Datepicker_Test@2f8f5f62]" name="verifyTitle" duration-ms="34" started-at="2022-09-13T00:24:23 IST" finished-at="2022-09-13T00:24:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitle -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Datepicker_Test@2f8f5f62]" name="afterMethod" is-config="true" duration-ms="1" started-at="2022-09-13T00:24:24 IST" finished-at="2022-09-13T00:24:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTitle status=SUCCESS method=Datepicker_Test.verifyTitle()[pri:0, instance:com.demoQA.tests.Datepicker_Test@2f8f5f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.demoQA.tests.Datepicker_Test@2f8f5f62]" name="after" is-config="true" duration-ms="640" started-at="2022-09-13T00:24:24 IST" finished-at="2022-09-13T00:24:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.demoQA.tests.Datepicker_Test -->
    </test> <!-- Test14 -->
    <test name="Test15" duration-ms="12720" started-at="2022-09-13T00:24:24 IST" finished-at="2022-09-13T00:24:37 IST">
      <class name="com.demoQA.tests.Droppable_Test">
        <test-method status="PASS" signature="beforetest()[pri:0, instance:com.demoQA.tests.Droppable_Test@382db087]" name="beforetest" is-config="true" duration-ms="7257" started-at="2022-09-13T00:24:24 IST" finished-at="2022-09-13T00:24:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="beforeclass()[pri:0, instance:com.demoQA.tests.Droppable_Test@382db087]" name="beforeclass" is-config="true" duration-ms="194" started-at="2022-09-13T00:24:31 IST" finished-at="2022-09-13T00:24:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method status="PASS" signature="verifyAccepatbleDragDrop()[pri:0, instance:com.demoQA.tests.Droppable_Test@382db087]" name="verifyAccepatbleDragDrop" duration-ms="377" started-at="2022-09-13T00:24:32 IST" finished-at="2022-09-13T00:24:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAccepatbleDragDrop -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Droppable_Test@382db087]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:24:32 IST" finished-at="2022-09-13T00:24:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAccepatbleDragDrop status=SUCCESS method=Droppable_Test.verifyAccepatbleDragDrop()[pri:0, instance:com.demoQA.tests.Droppable_Test@382db087] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyDragDrop()[pri:0, instance:com.demoQA.tests.Droppable_Test@382db087]" name="verifyDragDrop" duration-ms="3834" started-at="2022-09-13T00:24:32 IST" finished-at="2022-09-13T00:24:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDragDrop -->
        <test-method status="PASS" signature="verifyTitle()[pri:0, instance:com.demoQA.tests.Droppable_Test@382db087]" name="verifyTitle" duration-ms="55" started-at="2022-09-13T00:24:36 IST" finished-at="2022-09-13T00:24:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitle -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Droppable_Test@382db087]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:24:36 IST" finished-at="2022-09-13T00:24:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDragDrop status=SUCCESS method=Droppable_Test.verifyDragDrop()[pri:0, instance:com.demoQA.tests.Droppable_Test@382db087] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Droppable_Test@382db087]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:24:36 IST" finished-at="2022-09-13T00:24:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTitle status=SUCCESS method=Droppable_Test.verifyTitle()[pri:0, instance:com.demoQA.tests.Droppable_Test@382db087] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyNotAccepatbleDragDrop()[pri:1, instance:com.demoQA.tests.Droppable_Test@382db087]" name="verifyNotAccepatbleDragDrop" duration-ms="336" started-at="2022-09-13T00:24:36 IST" finished-at="2022-09-13T00:24:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNotAccepatbleDragDrop -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.Droppable_Test@382db087]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:24:36 IST" finished-at="2022-09-13T00:24:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNotAccepatbleDragDrop status=SUCCESS method=Droppable_Test.verifyNotAccepatbleDragDrop()[pri:1, instance:com.demoQA.tests.Droppable_Test@382db087] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.demoQA.tests.Droppable_Test@382db087]" name="after" is-config="true" duration-ms="663" started-at="2022-09-13T00:24:36 IST" finished-at="2022-09-13T00:24:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- com.demoQA.tests.Droppable_Test -->
    </test> <!-- Test15 -->
    <test name="Test16" duration-ms="16362" started-at="2022-09-13T00:24:37 IST" finished-at="2022-09-13T00:24:53 IST">
      <class name="com.demoQA.tests.ProgressBar_Test">
        <test-method status="PASS" signature="beforetest()[pri:0, instance:com.demoQA.tests.ProgressBar_Test@44f75083]" name="beforetest" is-config="true" duration-ms="8375" started-at="2022-09-13T00:24:37 IST" finished-at="2022-09-13T00:24:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="beforeclass()[pri:0, instance:com.demoQA.tests.ProgressBar_Test@44f75083]" name="beforeclass" is-config="true" duration-ms="162" started-at="2022-09-13T00:24:45 IST" finished-at="2022-09-13T00:24:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method status="PASS" signature="verifyProgressBar()[pri:0, instance:com.demoQA.tests.ProgressBar_Test@44f75083]" name="verifyProgressBar" duration-ms="7129" started-at="2022-09-13T00:24:46 IST" finished-at="2022-09-13T00:24:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyProgressBar -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.ProgressBar_Test@44f75083]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:24:53 IST" finished-at="2022-09-13T00:24:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyProgressBar status=SUCCESS method=ProgressBar_Test.verifyProgressBar()[pri:0, instance:com.demoQA.tests.ProgressBar_Test@44f75083] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyTitle()[pri:0, instance:com.demoQA.tests.ProgressBar_Test@44f75083]" name="verifyTitle" duration-ms="35" started-at="2022-09-13T00:24:53 IST" finished-at="2022-09-13T00:24:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitle -->
        <test-method status="PASS" signature="after()[pri:0, instance:com.demoQA.tests.ProgressBar_Test@44f75083]" name="after" is-config="true" duration-ms="659" started-at="2022-09-13T00:24:53 IST" finished-at="2022-09-13T00:24:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.demoQA.tests.ProgressBar_Test@44f75083]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-09-13T00:24:53 IST" finished-at="2022-09-13T00:24:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTitle status=SUCCESS method=ProgressBar_Test.verifyTitle()[pri:0, instance:com.demoQA.tests.ProgressBar_Test@44f75083] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.demoQA.tests.ProgressBar_Test -->
    </test> <!-- Test16 -->
  </suite> <!-- Suite -->
</testng-results>
